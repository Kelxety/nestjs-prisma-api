// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  name           String?
  email          String   @unique
  emailVerified  Boolean?
  image          String?
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  favoriteIds    String[]
  role           Role     @default(CLIENT)

  accounts     Account[]
  listings     Listing[]
  reservations Reservation[]
}

model Account {
  id                String  @id @default(uuid())
  user              User    @relation(fields: [userId], references: [id])
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  userId            String

  @@unique([provider, providerAccountId])
}

model Listing {
  id            String   @id @default(uuid())
  title         String
  description   String?
  imageSrc      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  category      String
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  locationValue String
  price         Int
  userId        String?

  user         User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  reservations Reservation[]
}

model Reservation {
  id          String   @id @default(uuid())
  start_date  DateTime
  end_date    DateTime
  total_price Int
  createdAt   DateTime @default(now())
  userId      String
  listingId   String

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

enum Role {
  CLIENT
  ADMIN
  SUPERADMIN
}
